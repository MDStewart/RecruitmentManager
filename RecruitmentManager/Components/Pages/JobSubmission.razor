@page "/job"

@using RecruitmentManager.Models
@using RecruitmentManager.Data
@using RecruitmentManager.Services

@inject HRMSService Service
@inject ILogger<Job> Logger

<h3>MDEQ Job Openings</h3>
<dialog open="@submitted">
    <p>@AlertMessage</p>
    <form method="dialog">
        <button onclick="window.location.href='/job-board';">Close</button>
    </form>
</dialog>
<div>
    <EditForm FormName="job-submission" Model="Model" OnSubmit="SubmitJobOpening">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <p>
            <label>PIN: <InputNumber @bind-Value="Model!.Id" placeholder="1234" size="10" /></label>
        </p>
        <p>
            <label>Position: <InputText @bind-Value="Model.Position" size="50" /></label>
        </p>
        <p>
            <label>
                Location:
                <InputSelect TValue="String" @bind-Value="Model.Location">
                    @foreach (string loc in JobLocations.Locations)
                    {
                        <option value="@loc">@loc</option>
                    }
                </InputSelect>
            </label>
        </p>
        <p>
            <label>Starting Salary: <InputNumber @bind-Value="Model.StartingSalary" placeholder="50000.00" size="10" /></label>
        </p>
        <p>
            <label>End Date: <InputDate @bind-Value="Model.EndDate" /></label>
        </p>
        <p>
            <label>Minimum Qualifications: <InputTextArea @bind-Value="Model.MinimumQualifications" rows="5" cols="50" /></label>
        </p>
        <p>
            <label>Special Requirements: <InputTextArea @bind-Value="Model.SpecialRequirements" rows="5" cols="50" /></label>
        </p>
        <p>
            <label>Primary Functions: <InputTextArea @bind-Value="Model.PrimaryFunctions" rows="5" cols="50" /></label>
        </p>
        <p>
            <button type="submit">Submit</button>
        </p>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private Job? Model { get; set; }
    private string? AlertMessage { get; set; }
    private bool submitted = false;

    protected override void OnInitialized()
    {
        Model ??= new() { EndDate = DateOnly.FromDateTime(DateTime.Now) }; ;
    }

    private void SubmitJobOpening()
    {
        if(Model != null )
        {
            Service.Create(Model);
            AlertMessage = "Job opening submitted!";
            submitted = true;
            Reset();
        }
        else
        {
            AlertMessage = "Form is INVALID";
        }
    }

    private void Reset()
    {
        Model = new() { EndDate = DateOnly.FromDateTime(DateTime.Now) };
    }
}